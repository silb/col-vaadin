# Contextual Object Lookup (COL) for Vaadin

This library provides a mechanism for decoupling Vaadin components at different
levels of the component hierarchy from each other.

The typical scenario where this is needed is when a component deep down in the
hierarchy depends on some other component closer to the root of the hierarchy.

The decoupling is provided by an intermediary lookup mechanism which components
down in the hierarchy can use in order to get access to:

 * Components further up in the hierarchy
 * Services
 * Other objects that are shared between two or more components

## The Contextual Object Lookup (COL) Pattern

The pattern is somewhat similar to the Service Locator pattern in that they are
both used for locating objects (services). COL differs from SL as the lookup
may return different results depending on the position (or context) in the
component tree where it starts.

Example:
        R (Provides: CustomerService, Customer)
       / \
   C1 -   - C2 (Provides: Customer)
          \
           - C21
            \
             - C211

The component C1 is used for editing the name of a customer. The customer whose
name is to be edited is obtained through COL starting from C1 itself. As C1 does
not implement Customer nor provide Customer through ContextProvider, the COL
continues up to R, the root component (a Vaadin Application). R provides a
Customer which is then returned to C1 as the result of the COL. C1 will
therefore be editing the name of the customer provided by R.

In order to store a customer, C1 needs access to a CustomerService. This service
is also obtained through COL.

The component C211 displays a summary of a customer. In order to obtain the
customer it performs COL starting from itself. C211 and C21 do not implement
Customer nor do they provide a customer through ContextProvider. The COL
therefore continues up to C2 which does provide a customer. Note that this
customer is different from the customer that is provided by R. The COL
terminates and returns the customer from C2 to C211. By using COL for looking up
the customer we avoid having any dependency or object reference from C211 and
C2. This gets increasingly important as the distance between C211 and C2
increases.
